(()=>{"use strict";var __webpack_modules__={629:()=>{eval("\n// UNUSED EXPORTS: default\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./packages/roll/src/index.vue?vue&type=template&id=2fab3c99&scoped=true&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { ref: \"rollWrapper\", staticClass: \"roll-wrapper\" }, [\n    _c(\n      \"div\",\n      {\n        ref: \"rollContent\",\n        staticClass: \"roll-content\",\n        style: { animation: _vm.rollOrigin }\n      },\n      [\n        _vm.message\n          ? _c(\"span\", { style: _vm.propStyle }, [_vm._v(_vm._s(_vm.message))])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.html\n          ? _c(\"div\", { domProps: { innerHTML: _vm._s(_vm.html) } })\n          : _vm._e()\n      ]\n    ),\n    _vm._v(\" \"),\n    _vm.roll\n      ? _c(\n          \"div\",\n          { staticClass: \"roll-content\", style: { animation: _vm.rollCopy } },\n          [\n            _vm.message\n              ? _c(\"span\", { style: _vm.propStyle }, [\n                  _vm._v(_vm._s(_vm.message))\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.html\n              ? _c(\"div\", { domProps: { innerHTML: _vm._s(_vm.html) } })\n              : _vm._e()\n          ]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./packages/roll/src/index.vue?vue&type=template&id=2fab3c99&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./packages/roll/src/index.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const srcvue_type_script_lang_js_ = ({\n  name: 'Roll',\n  props: {\n    html: {\n      type: String,\n      default: ''\n    },\n    propStyle: {\n      type: [String, Object],\n      default: ''\n    },\n    message: {\n      type: [String, Number],\n      default: ''\n    },\n    speed: {\n      type: Number,\n      default: 4\n    },\n    timingFunction: {\n      type: String,\n      default: 'linear'\n    },\n    interval: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    rollOrigin() {\n      const animationStyleDefault = 'rollOrigin ' + this.duration + ' infinite ' + this.timingFunction;\n      const animationStyleInterval = 'rollOriginInterval ' + this.duration + ' infinite ' + this.timingFunction;\n      const animation = this.interval ? animationStyleInterval : animationStyleDefault;\n      return this.roll ? animation : '';\n    },\n\n    rollCopy() {\n      const animationStyleDefault = 'rollCopy ' + this.duration + ' infinite ' + this.timingFunction;\n      const animationStyleInterval = 'rollCopyInterval ' + this.duration + ' infinite ' + this.timingFunction;\n      const animation = this.interval ? animationStyleInterval : animationStyleDefault;\n      return this.roll ? animation : '';\n    }\n\n  },\n\n  data() {\n    return {\n      duration: 3,\n      roll: false\n    };\n  },\n\n  watch: {\n    message() {\n      this.$nextTick(this.calcWidth);\n    }\n\n  },\n  methods: {\n    calcWidth() {\n      const wrapperWidth = this.$refs.rollWrapper.offsetWidth;\n      const width = this.$refs.rollContent.offsetWidth;\n      this.roll = wrapperWidth < width;\n      this.duration = (width * this.speed * 0.01).toFixed(1) + 's';\n      this.duration = this.duration < 1 ? 1 : this.duration;\n    },\n\n    refresh() {\n      this.$nextTick(this.calcWidth);\n    }\n\n  },\n\n  mounted() {\n    this.calcWidth();\n  }\n\n});\n;// CONCATENATED MODULE: ./packages/roll/src/index.vue?vue&type=script&lang=js&\n /* harmony default export */ const roll_srcvue_type_script_lang_js_ = (srcvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n;// CONCATENATED MODULE: ./packages/roll/src/index.vue\n\n\n\n;\n\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  roll_srcvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2fab3c99\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"packages/roll/src/index.vue\"\n/* harmony default export */ const src = (component.exports);\n;// CONCATENATED MODULE: ./packages/roll/index.js\n\n\nsrc.install = function (Vue) {\n  Vue.component(src.name, src);\n};\n\n/* harmony default export */ const roll = ((/* unused pure expression or super */ null && (AuRoll)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///629\n")}},__webpack_exports__={};__webpack_modules__[629]()})();